<p>我想如果有在五年內寫過前端的，或多或少都會有留意過或者有用React.js 或者 Vue 和 Angular。</p>
<p>但我還是希望可以推這個東西。</p>
<p>對比框架是個很玄學的事情。但我還是希望這篇文是sound 的。</p>
<p>背景：後端工程師，但同時在工作上應用過React 和Vue，但不Trivial 的個人項目中應用過Svelte。為Google Blocky 寫過Svelte 的Binding Example。</p>
<p>（可能就是所謂的越是本職越不敢/不想寫吧，就寫寫前端好了）</p>
<p>比如 ： Svelte 的第一句</p>
<blockquote>
<p>All code is buggy. It stands to reason, therefore, that the more code you have to write the buggier your apps will be.
（所有代碼都是錯誤的。 因此，有理由說，你越寫越buggy。）</p>
</blockquote>
<p>我就認為是過份的簡化和沒有指導意義的。</p>
<p>但Svelte舉的例子卻是挺實用的：</p>
<pre><code class="language-javascript">import React, { useState } from 'react';

export default () =&gt; {
  const [a, setA] = useState(1);
  const [b, setB] = useState(2);

  function handleChangeA(event) {
    setA(+event.target.value);
  }

  function handleChangeB(event) {
    setB(+event.target.value);
  }

  return (
    &lt;div&gt;
      &lt;input type="number" value={a} onChange={handleChangeA}/&gt;
      &lt;input type="number" value={b} onChange={handleChangeB}/&gt;

      &lt;p&gt;{a} + {b} = {a + b}&lt;/p&gt;
    &lt;/div&gt;
  );
};</code></pre>
<pre><code class="language-javascript">&lt;template&gt;
  &lt;div&gt;
    &lt;input type="number" v-model.number="a"&gt;
    &lt;input type="number" v-model.number="b"&gt;

    &lt;p&gt;{{a}} + {{b}} = {{a + b}}&lt;/p&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
  export default {
    data: function() {
      return {
        a: 1,
        b: 2
      };
    }
  };
&lt;/script&gt;</code></pre>
<p>看起來Vue 比起 React 短了不少，但主要問題還是在於State Binding 是wire 至一個object 的指者key 中的 ( <code>&lt;function T&gt;.&lt;var&gt;</code> 和 <code>&lt;object T&gt;.data</code> ) </p>