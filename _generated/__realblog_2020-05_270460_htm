<h2>試運行</h2>
<p>生成binary 後, 那個binary 可以在本機os 中運行。</p>
<p>修改Cargo.toml</p>
<pre><code class="language-toml">[dependencies]
bootloader = "0.6"

[package.metadata.bootimage]
default-target = "x86_64-aCore.json"</code></pre>
<p>執行:</p>
<pre><code class="language-bash">cargo install bootimage
rustup component add llvm-tools-preview
sudo apt install qemu-system-x86
# for mac: brew install qemu 

#以下開始build boot image
cargo bootimage --target x86_64-aCore.json</code></pre>
<h2>在WSL下建立環境的筆記</h2>
<p>為了在虛擬機中運作, 我們設定一個QEMU, qemu 在linux 中特別好用, 所以我們試著用xwindows 來令WSL 顯示出畫面。</p>
<p>下載 xwindows server for windows
<a href="https://sourceforge.net/projects/vcxsrv/files/latest/download">https://sourceforge.net/projects/vcxsrv/files/latest/download</a></p>
<p>vcxsrv 是個更新得比較快的XWindows</p>
<p>再在WSL 中安裝x11-aps 來測試一下:</p>
<pre><code>$ sudo apt-get install x11-apps

$ echo "export DISPLAY=127.0.0.1:0" &gt;&gt; ~/.bashrc

# 或
$ sudo su
root$ echo "export DISPLAY=127.0.0.1:0" &gt;&gt; /etc/profile

xeyes # try to see if eyes are showing, if not, the server is not running probably, you can close it afterwards</code></pre>
<p>然後就可以執行qemu 了</p>
<pre><code>qemu-system-x86_64 -drive format=raw,file=target/x86_64-aCore/debug/bootimage-aCore.bin </code></pre>
<p><img src="https://i.imgur.com/Tq2Cqdt.png" alt="yay" /></p>