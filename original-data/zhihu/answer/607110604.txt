如何评价腾讯开源的PHP框架Biny？
<p>既然是初始阶段，也是轻量，使用场景应该比较灵活，有关packaging, dependencies, test 和psr 的就不说要怎麽改善了，这都是架式。要是工程化程度不高就都是垃圾，那就有点强加个人意愿了。</p><p>我不是想说这是个好东西，只是，这个框架的真正设计原因和心路历程是更值得关注的毕竟，今天已经有数不过来的"框架"了。</p><p>首先作者的水平我是有点怀疑的。</p><p>1。文档中有一句：「请在php.ini配置中打开short_open_tag，使用简写模版，提高开发效率」。他利用了传参来反映模版变数，辅以「&lt;?=」来显示，但事实上，打不打开「short_open_tag」根本不影响&lt;?= 的作用的，只影响&lt;?的作用。</p><p>然後这个所谓的框架是有点儿「刚愎自用」或者在github 上更常见的「opinionated」。</p><p>2。作为所谓的「轻量库」，DAO 却占了一大部分。</p><p>3。渲染的这个部分</p><p>return $this-&gt;display('main/test', array('test'=&gt;1), array('path'=&gt;'/test.png'));</p><p>他说：「第二个为页面参数数组，第三个为系统类数据(没有可不传)」</p><p>这个分法和次序，在语义上亳无设计感。</p><p>4。几乎所有namespace 下的有功能的类别有一个TX 的prefix。。。这种opinionated 亳无道理。除非他能解释这些classes 和腾讯某个库有关系，又或者TX 只是他女朋友的名字之类的，否则，这种品味也实在太差。</p><p>5。路由方面：默认路由十分弱鸡，自定义路由则要用家写极费脑力的REGEX。我造过轮子，看得出是作者在这有点能力不足，写不出好的路由专用的DSL的解释代码，而只好走两个极端。只要真用起来，稍微不是trival 的项目，都会知道现在这个设计会带来多少痛楚。</p><p></p>
1551540523